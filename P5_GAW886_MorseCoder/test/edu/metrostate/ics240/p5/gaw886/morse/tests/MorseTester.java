package edu.metrostate.ics240.p5.gaw886.morse.tests;

import static org.junit.Assert.fail;

import org.junit.Test;

import edu.metrostate.ics240.p5.gaw886.morse.MorseCode;
import edu.metrostate.ics240.p5.gaw886.morse.MorseNode;
import edu.metrostate.ics240.p5.gaw886.morse.MorseTree;

public class MorseTester {
	@Test
	public void testEncoding() {
		MorseCode.encode("Hello, World.");
		MorseCode.encode("Hello, World?");
		MorseCode.encode("Hello, World!");
		MorseCode.encode("Hello, World");
		MorseCode.encode("Hello, World)");
		MorseCode.encode("Hello, World:");
		MorseCode.encode("Hello, World;");
		MorseCode.encode("Hello, World@");
		System.out.println(MorseCode.encode("Jackdaws love my big sphinx of quartz"));

		try {
			MorseCode.encode("Hello, World$"); // illegal value
			fail("Expected exception");
		} catch (IllegalArgumentException iae) {
			// expected
		}
	}

	@Test
	public void testTree() {
		MorseTree<Character> morseNode = new MorseTree<>();
		
		 	morseNode.insert('0',"-----");
	        morseNode.insert('1',"и----");
	        morseNode.insert('2',"ии---");
	        morseNode.insert('3',"иии--");
	        morseNode.insert('4',"ииии-");
	        morseNode.insert('5',"иииии");
	        morseNode.insert('6',"-ииии");
	        morseNode.insert('7',"--иии");
	        morseNode.insert('8',"---ии");
	        morseNode.insert('9',"----и");
	        morseNode.insert('A',"и-");
	        morseNode.insert('B',"-иии");
	        morseNode.insert('C',"-и-и");
	        morseNode.insert('D',"-ии");
	        morseNode.insert('E',"и");
	        morseNode.insert('F',"ии-и");
	        morseNode.insert('G',"--и");
	        morseNode.insert('H',"ииии");
	        morseNode.insert('I',"ии");
	        morseNode.insert('J',"и---");
	        morseNode.insert('K',"-и-");
	        morseNode.insert('L',"и-ии");
	        morseNode.insert('M',"--");
	        morseNode.insert('N',"-и");
	        morseNode.insert('O',"---");
	        morseNode.insert('P',"и--и");
	        morseNode.insert('Q',"--и-");
	        morseNode.insert('R',"и-и");
	        morseNode.insert('S',"иии");
	        morseNode.insert('T',"-");
	        morseNode.insert('U',"ии-");
	        morseNode.insert('V',"иии-");
	        morseNode.insert('W',"и--");
	        morseNode.insert('X',"-ии-");
	        morseNode.insert('Y',"-и--");
	        morseNode.insert('Z',"--ии");
	        morseNode.insert('.',"*-*-*-");
	        morseNode.insert(',',"--**--");
	        morseNode.insert('?',"**--**");
	        morseNode.insert('!',"-*-*--");
	        morseNode.insert('(',"-*--*");
	        morseNode.insert(')',"-*--*-");
	        morseNode.insert(':',"---***");
	        morseNode.insert(';',"-*-*-*");
	        morseNode.insert('@',"*--*-*");
	        
	       morseNode.printInOrder();
	}
}
